{
  "name": "Monitoring Workflow v1",
  "nodes": [
    {
      "parameters": {},
      "id": "ca723b7b-325e-4897-ab63-c777c76087fa",
      "name": "No Operations",
      "type": "n8n-nodes-base.noOp",
      "position": [
        -1024,
        -320
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "chunkingMode": "advanced",
        "options": {
          "summarizationMethodAndPrompts": {
            "values": {
              "combineMapPrompt": "You are the experinced SOC AI Analyst designed by Mariskarthick M, Analyse the following and provide the detailed investigation with the below mentioned format.\n\n#Analyse:\n{{ $json | jsonStringify }}\n\n#Format:\nAlert Name: \nAlert Description: (describe about that alert)\nMITRE Tactic & Technique\nImpacted Scope: Source IP, Destiantion IP, Host Machine\n\nExternal Artifacts Reputation check:\n\nAnalysis:\n\n\nSecurity Recommendations.\n\nPlease make the investigation report in organized way and each fields line by line.\n {{ $json.body }}\n\n",
              "prompt": "You are the experinced SOC AI Analyst designed by Mariskarthick M, Analyse the following and provide the detailed investigation with the below mentioned format.\n\n\"{text}\"\n\nconicise summary"
            }
          }
        }
      },
      "id": "1b79f1d8-82f3-4c03-9ece-4a8a56abd3d0",
      "name": "Investigation Summarization",
      "type": "@n8n/n8n-nodes-langchain.chainSummarization",
      "position": [
        -384,
        -16
      ],
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-3.5-turbo",
          "mode": "list",
          "cachedResultName": "gpt-3.5-turbo"
        },
        "options": {
          "responseFormat": "text"
        }
      },
      "id": "23c340d5-7e96-4869-9b99-5f6ef7aa84fd",
      "name": "Customized AI Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        -448,
        256
      ],
      "typeVersion": 1.2,
      "notesInFlow": false,
      "credentials": {
        "openAiApi": {
          "id": "T0GF90Xwio2gjDv3",
          "name": "OpenAi account 3"
        }
      }
    },
    {
      "parameters": {
        "chatId": "6340620540",
        "text": "=={{ \n  String($json.text ?? $json.output?.text ?? $json.result ?? '')\n    .replaceAll('\\\\', '')\n    .replaceAll('*', '')\n    .replaceAll('#', '')\n    .replaceAll('_', '')\n    .replaceAll('[', '')\n    .replaceAll(']', '')\n    .replaceAll('`', '')\n    .replaceAll('  ', ' ')\n    .replaceAll('\\n\\n', '\\n')\n    .trim()\n}}\n",
        "additionalFields": {
          "appendAttribution": true
        }
      },
      "id": "bf9ea775-8b05-4736-9aab-e510da29dc21",
      "name": "SOC Team",
      "type": "n8n-nodes-base.telegram",
      "position": [
        -48,
        -16
      ],
      "webhookId": "e9ec1119-8d54-43b4-a231-d441547459df",
      "typeVersion": 1.2,
      "credentials": {
        "telegramApi": {
          "id": "2l68qNluW9SUCo7Y",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Entrada flexible desde Hosted Chat:\n// - Si pegas JSON en el chat, viene como string en $json.text\n// - Si escribes texto libre, no rompe (pero no habrá triage útil)\n\nlet a = $json;\nif (typeof a?.text === 'string') {\n  try { a = JSON.parse(a.text); }\n  catch { a = { message: a.text }; }\n} else if (typeof a === 'string') {\n  try { a = JSON.parse(a); }\n  catch { a = { message: a }; }\n}\n\n// ---- Señales disponibles (sin Wazuh) ----\n// a.metrics.rate_pps (paquetes/s), a.metrics.unique_src_ips, a.metrics.duration_sec\n// a.asset.criticality (1-5), a.ai.confidence (0-1)\nconst num = (x, d=0) => Number.isFinite(Number(x)) ? Number(x) : d;\n\nconst ratePps       = num(a?.metrics?.rate_pps, 0);\nconst uniqueSources = num(a?.metrics?.unique_src_ips, 1);\nconst durationSec   = num(a?.metrics?.duration_sec, 0);\nconst assetCritical = Math.max(1, Math.min(5, num(a?.asset?.criticality, 3)));\nconst confidence    = Math.max(0, Math.min(1, (a?.ai?.confidence ?? 0.7)));\n\n// Puntuaciones heurísticas (ajusta umbrales a tu entorno)\nconst volScore   = ratePps >= 500000 ? 5\n                  : ratePps >= 200000 ? 4\n                  : ratePps >=  50000 ? 3\n                  : ratePps >=  10000 ? 2 : 1;\n\nconst fanoutScore = uniqueSources >= 5000 ? 5\n                  : uniqueSources >= 1000 ? 4\n                  : uniqueSources >=  200 ? 3\n                  : uniqueSources >=   50 ? 2 : 1;\n\nconst persistScore = durationSec >= 3600 ? 5\n                    : durationSec >=  900 ? 4\n                    : durationSec >=  300 ? 3\n                    : durationSec >=   60 ? 2 : 1;\n\nconst impactScore = assetCritical; // 1–5\n\n// Riesgo compuesto (sin Wazuh): volumen + alcance + persistencia + impacto\nconst risk = 0.30 * volScore\n           + 0.25 * fanoutScore\n           + 0.20 * persistScore\n           + 0.25 * impactScore;\n\n// Map a prioridad de 4 bandas\nlet priority = 'Low';\nif (risk >= 4.0 && risk < 4.6) priority = 'Medium';\nif (risk >= 4.6 && risk < 4.9) priority = 'High';\nif (risk >= 4.9)               priority = 'Critical';\n\n// Reglas HITL: baja confianza, gran fan-out o impacto máximo\nconst hitlRequired = (confidence < 0.7) || (fanoutScore >= 4) || (impactScore >= 5);\n\n// Devolver un único item con triage\nreturn [{\n  json: {\n    ...a,\n    triage: {\n      metrics: { volScore, fanoutScore, persistScore, impactScore },\n      risk, priority, hitlRequired,\n      ces: { severity: undefined, confidence } // dejamos severity vacío si no hay modelo CES\n    }\n  }\n}];\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -848,
        -48
      ],
      "id": "13bfff11-e1e1-4464-b1dd-6a659769b264",
      "name": "Code in JavaScript"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{$json.triage.priority}}",
                    "rightValue": "Medium",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "f6336a4d-257b-43c1-97ad-ceec87f8d3d2"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "4ce57df4-e5b9-49cc-afc0-a6ac68e678e8",
                    "leftValue": "={{$json.triage.priority}}",
                    "rightValue": "High",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0fe1ddec-e5c4-4013-8a92-7ef40eaa9567",
                    "leftValue": "={{$json.triage.priority}}",
                    "rightValue": "Critical",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d095276f-a136-4592-835e-1ef99aa9899f",
                    "leftValue": "={{$json.triage.priority}}",
                    "rightValue": "Low",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -672,
        16
      ],
      "id": "9fb958d9-df38-40bd-a627-6da743566dac",
      "name": "Switch"
    },
    {
      "parameters": {
        "path": "wazuh/alert",
        "authentication": "basicAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -1136,
        -48
      ],
      "id": "f92fd727-060b-4a3b-b86c-5825ce73b015",
      "name": "Webhook",
      "webhookId": "90a5cda1-e5f5-41e9-a2e1-5792cbcc5d6f",
      "credentials": {
        "httpBasicAuth": {
          "id": "WiVizYccv7YmgdG0",
          "name": "Unnamed credential"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Customized AI Model": {
      "ai_languageModel": [
        [
          {
            "node": "Investigation Summarization",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Investigation Summarization": {
      "main": [
        [
          {
            "node": "SOC Team",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Investigation Summarization",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Investigation Summarization",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Investigation Summarization",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Investigation Summarization",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "59b08e3f-84f1-42ac-bdd8-6c720010f746",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "ecbb43a45eb5ea5ac84f8f96d5a87eb35e9f7a93c7d1e989bbcf2099033bd3a3"
  },
  "id": "H1lgdnwFmGaRLp2I",
  "tags": []
}